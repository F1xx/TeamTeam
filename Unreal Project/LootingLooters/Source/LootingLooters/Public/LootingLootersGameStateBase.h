// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/GameStateBase.h"
#include "LootingLootersGameStateBase.generated.h"

/**
 * 
 */
UCLASS()
class LOOTINGLOOTERS_API ALootingLootersGameStateBase : public AGameStateBase
{
	GENERATED_BODY()
		ALootingLootersGameStateBase();
	
public:

	//On begin runtime, generate the level and its elements.
	virtual void BeginPlay() override;

	//Server call : Spawn a random level.
	UFUNCTION(Server, Reliable, WithValidation)
		void Server_GenerateRandomRoomLayout();

	//Server call : Populate the level with assets and doors.
	UFUNCTION(Server, Reliable, WithValidation)
		void Server_PopulateRoomSockets();

	//Server call : Connect the level's doors together.
	UFUNCTION(Server, Reliable, WithValidation)
		void Server_GenerateRandomRoomConnections();

	//Server call : Spawn fresh loot in rooms.
	UFUNCTION(Server, Reliable, WithValidation)
		void Server_GenerateLoot();

	//Copies the room list.
	void GetRoomArray(TArray<class ARoomActorBase*>& RoomArray);
	
protected:

	//All rooms generated by the random generation process
	UPROPERTY(Replicated, VisibleInstanceOnly, Category = "Rooms")
		TArray<class ARoomActorBase*> Rooms;

};
